// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/permission.proto

package apsara.odps;

public final class PermissionProtos {
  private PermissionProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Permission
      implements com.google.protobuf.ProtocolMessageEnum {
    Read(0, 1),
    Write(1, 2),
    ReadWrite(2, 3),
    ;
    
    public static final int Read_VALUE = 1;
    public static final int Write_VALUE = 2;
    public static final int ReadWrite_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static Permission valueOf(int value) {
      switch (value) {
        case 1: return Read;
        case 2: return Write;
        case 3: return ReadWrite;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Permission>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Permission>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Permission>() {
            public Permission findValueByNumber(int number) {
              return Permission.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return PermissionProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Permission[] VALUES = {
      Read, Write, ReadWrite, 
    };
    
    public static Permission valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Permission(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:apsara.odps.Permission)
  }
  
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\027common/permission.proto\022\013apsara.odps*0" +
      "\n\nPermission\022\010\n\004Read\020\001\022\t\n\005Write\020\002\022\r\n\tRea" +
      "dWrite\020\003B\022B\020PermissionProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
